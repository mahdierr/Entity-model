To create an Entity Relationship (ER) model based on the given text, we need to break down the information into entities, their attributes, and relationships between them.

Entities and Their Attributes
Gymnasium

Attributes:
Gym Name (Primary Key)
Address
Telephone Number
Member

Attributes:
Member ID (Primary Key, Unique Identifier)
Last Name
First Name
Address
Date of Birth
Gender
Registered Gym (Foreign Key: Gym Name from the Gymnasium Entity)
Session

Attributes:
Session ID (Primary Key)
Sport Type
Schedule (Date & Time)
Max Capacity (Maximum number of members: 20)
Coach

Attributes:
Coach ID (Primary Key)
Last Name
First Name
Age
Specialty
Relationships
Gymnasium - Member (One-to-Many relationship)

A gym can have multiple members, but each member belongs to only one gym.
Relationship: A gym will have multiple members. This relationship is implemented with a foreign key in the Member entity pointing to Gymnasium.
Member - Session (Many-to-Many relationship)

A member can attend multiple sessions, and each session can accommodate multiple members (up to 20).
To handle this, we need a junction table:
Member_Session (Junction Table)
Attributes:
Member ID (Foreign Key)
Session ID (Foreign Key)
Session - Coach (Many-to-Many relationship)

A session can be led by up to two coaches, and a coach can lead multiple sessions.
We need a junction table:
Session_Coach (Junction Table)
Attributes:
Session ID (Foreign Key)
Coach ID (Foreign Key)
ER Diagram Description
Gymnasium entity is connected to Member through a one-to-many relationship.
Member is connected to Session via a many-to-many relationship, with the Member_Session junction table.
Session is connected to Coach via a many-to-many relationship, with the Session_Coach junction table.
Final ER Model
1. Gymnasium
Gym Name (PK)
Address
Telephone Number
2. Member
Member ID (PK)
Last Name
First Name
Address
Date of Birth
Gender
Gym Name (FK → Gymnasium)
3. Session
Session ID (PK)
Sport Type
Schedule
Max Capacity
4. Coach
Coach ID (PK)
Last Name
First Name
Age
Specialty
5. Member_Session (Junction Table)
Member ID (FK → Member)
Session ID (FK → Session)
6. Session_Coach (Junction Table)
Session ID (FK → Session)
Coach ID (FK → Coach)
Diagram Representation
Here is how the relationships can be structured:

Gymnasium 1 -- *∞ Member
Member ∞ -- ∞ Session (via Member_Session junction)
Session ∞ -- ∞ Coach (via Session_Coach junction)
This ER model represents a gym management system where multiple gymnasiums can have many members, who can participate in multiple sessions, and those sessions can have coaches leading them.

If you'd like to implement this model into a relational database, you can use the entities and relationships described here to create tables with foreign keys and junction tables for the many-to-many relationships.